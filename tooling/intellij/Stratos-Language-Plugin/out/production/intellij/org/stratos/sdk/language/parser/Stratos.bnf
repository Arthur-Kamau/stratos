// Copyright 2000-2020 JetBrains s.r.o. and other contributors. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file.
{
  parserClass="org.stratos.sdk.language.parser.StratosParser"
//  parserUtilClass="org.stratos.sdk.language.parser.StratosParserUtil"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="stratos"
  psiImplClassSuffix="Impl"
  psiPackage="org.stratos.sdk.language.psi"
  psiImplPackage="org.stratos.sdk.language.psi.impl"

  elementTypeHolderClass="org.stratos.sdk.language.psi.StratosTypes"
  elementTypeClass="org.stratos.sdk.language.psi.StratosElementType"
  tokenTypeClass="org.stratos.sdk.language.psi.StratosTokenType"

  psiImplUtilClass="org.stratos.sdk.language.psi.impl.StratosPsiImplUtil"


  tokens = [
// reserved words
  ASSERT="assert"
  COMMENT="comment"
  BREAK="break"
  CASE="case"
  CATCH="catch"
  CLASS="class"
  CONST="const"
  FUNCTION="function"
  OVERRIDE="overide"
  PACKAGE="package"
  CONTINUE="continue"
  DEFAULT="default"
  DO="do"
  ELSE="else"
  ENUM="enum"
  EXTENDS="extends"
  FALSE="false"
  FINAL="final"
  FINALLY="finally"
  FOR="for"
  IF="if"
  IN="in"
  IS="is"
  NEW="new"
  NULL="null"
  RETHROW="rethrow"
  RETURN="return"
  SUPER="super"
  SWITCH="switch"
  WHEN="when"
  INT="int"
  STRING="string"
  DOUBLE="double"
  ALIAS="alias"
  THIS="this"
  THROW="throw"
  TRUE="true"
  TRY="try"
  VARIABLE="var"
  VALUE="val"
  LET="let"
  MUTABLE="mut"
  VOID="void"
  WHILE="while"
  WITH="with"
 RESERVED_KEYWORD = 'reserved_keyword'

// BUILT_IN_IDENTIFIER
  BOOL="bool"
  UNIT="unit"
  ABSTRACT="abstract"
  AS="as"
  MATCH="match"
  UNSAFE="unsafe"
  MACRO_KW="macro"
  COVARIANT="covariant"
  DEFERRED="deferred"
  EXPORT="export"
  EXTENSION="extension"
  EXTERNAL="external"
  FACTORY="factory"
  GET="get"
  IMPLEMENTS="implements"
  IMPORT="import"
  LIBRARY="library"
  MIXIN="mixin"
  STRUCT="struct"
  OPERATOR="operator"
  PART="part"
  SET="set"
  STATIC="static"
  TYPEDEF="typedef"
  TYPE_KW="type"
  WHERE="where"

// other
  USE="use"
  ON="on"
  OF="of"
  NATIVE="native"
  SHOW="show"
  HIDE="hide"
  SYNC="sync"
  ASYNC="async"
  AWAIT="await"
  YIELD="yield"
  LATE="late"
  REQUIRED="required"

  OPEN_BRACKETS="{"
  CLOSE_BRACKETS="}"
  LSQUAREBRACKET="["
  RSQUAREBRACKET="]"
  OPEN_BRACE="("
  CLOSE_BRACE=")"
  OPEN_QUOTE="\""
  CLOSE_QUOTE="\""
  SEMI_COLON=";"
  MINUS="-"
  MINUS_EQ="-="
  MINUS_MINUS="--"
  ADD="+"
  PLUS_PLUS="++"
  PLUS_EQ="+="
  MODULAS="%"
  DIVIDE="/"
  DIV_EQ="/="
  MULTIPLY="*"
  MUL_EQ="*="
  MINUS_EQ="-="
  INT_DIV="~/"
  INT_DIV_EQ="~/="
  REM_EQ="%="
  REM="%"
  BIN_NOT="~"
  NOT="!"

  KEY="key"
  VALUE="value"

  EXPRESSION_BODY_DEF="=>"
  ASSIGN="="
  EQUAL="=="
  NEQ="!="
  DOT="."
  COLONCOLON="::"
  DOT_DOT=".."
  QUEST_DOT_DOT="?.."
  DOT_DOT_DOT="..."
  DOT_DOT_DOT_QUEST="...?"
  COMMA=","
  COLON=":"
  SEMICOLON=":"
  GREATER_THAN=">"
  ARROW="->"
  QUESTION="?"
  FAT_ARROW="=>"
  GT_EQ=">="
  GT_GT=">>"
  GT_GT_EQ=">>="
  LESS_THAN="<"
  LT_EQ="<="
  LT_LT="<<"
  LT_LT_EQ="<<="
  OR="|"
  OR_EQ="|="
  OR_OR="||"
  OR_OR_EQ="||="
  QUEST="?"
  QUEST_DOT="?."
  QUEST_QUEST="??"
  QUEST_QUEST_EQ="??="
  XOR="^"
  XOR_EQ="^="
  AND="&"
  AND_EQ="&="
  AND_AND="&&"
  AND_AND_EQ="&&="
  HASH="#"
  AT="@"
  LOOP="loop"
  UNDERSCORE="_"
  DOLLAR="$"
  ]
}
StratosFile ::= Definition*

Definition ::= FunctionDefinition

FunctionDefinition ::= function IDENTIFIER '(' ')' (returns Type)? '{' FunctionBody '}'

FunctionBody ::= Statement*

Statement ::= VariableDefinition | AssignmentStatement | FunctionInvocation

VariableDefinition ::= Type IDENTIFIER (';' | ('=' FunctionInvocation)?)

Type ::= int | string | char

AssignmentStatement ::= IDENTIFIER '=' FunctionInvocation

FunctionInvocation ::= IDENTIFIER '(' ')' ';'
